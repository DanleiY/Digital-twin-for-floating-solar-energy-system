data = readtable('dataset_temporal2.csv');
data.Properties.VariableNames = matlab.lang.makeValidName(data.Properties.VariableNames);

target_var = 'Pactual_W';

all_vars = data.Properties.VariableNames;
input_vars = setdiff(all_vars, [target_var]);
X = data{:, input_vars};
Y = data{:, target_var};

[Xn, ps] = mapminmax(X', 0, 1);
Xn = Xn';

cv = cvpartition(size(Xn,1), 'HoldOut', 0.2);
idxTrain = training(cv);
idxTest = test(cv);

Xtrain = Xn(idxTrain,:);
Ytrain = Y(idxTrain);
Xtest = Xn(idxTest,:);
Ytest = Y(idxTest);

net = fitnet([10,10]);
net.trainParam.showWindow = true;
net.divideFcn = 'divideind';
net.divideParam.trainInd = find(idxTrain);
net.divideParam.valInd = [];
net.divideParam.testInd = find(idxTest);

[net, tr] = train(net, Xn', Y');

Ypred = net(Xtest');

rmse = sqrt(mean((Ytest - Ypred').^2));
ss_res = sum((Ytest - Ypred').^2);
ss_tot = sum((Ytest - mean(Ytest)).^2);
r2 = 1 - ss_res / ss_tot;

nonzero_idx = Ytest ~= 0;
mape = mean(abs(Ytest(nonzero_idx) - Ypred(nonzero_idx)') ./ Ytest(nonzero_idx)) * 100;

fprintf('\n** Results for: %s**\n', target_var);
fprintf('RMSE = %.4f | RÂ² = %.4f | MAPE = %.2f %%\n', rmse, r2, mape);
